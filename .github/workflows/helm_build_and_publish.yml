name: Helm Workflow

on:
  repository_dispatch:
    types: [helm-changed]
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  APP: helm
  HELM_VERSION: v3.16.1
  CHART_RELEASER_VERSION: 1.6.1

jobs:
  build-helm-packages:
    name: Build and Publish Helm Packages
    runs-on: ubuntu-24.04
    defaults:
      run:
        working-directory: ${{ env.APP }}

    permissions:
      contents: write
      packages: write
      attestations: write
      id-token: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure Git
        run: |
          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor }}@users.noreply.github.com"

      - name: Install Helm
        uses: azure/setup-helm@fe7b79cd5ee1e45176fcad797de68ecaf3ca4814
        with:
          version: ${{ env.HELM_VERSION }}

      - name: Lint Charts
        run: |
          helm lint charts/*

      - name: Install chart-releaser
        run: |
          curl -sSL https://github.com/helm/chart-releaser/releases/download/v${{ env.CHART_RELEASER_VERSION }}/chart-releaser_${{ env.CHART_RELEASER_VERSION }}_linux_amd64.tar.gz | tar xz -C /usr/local/bin cr
    
      - name: Create Helm Tags
        run: |
          # Fetch all tags from the remote repository
          git fetch --tags
    
          # Iterate over each chart directory in helm/charts/
          for chart_dir in helm/charts/*/; do
            if [ -d "$chart_dir" ]; then
              # Get the chart name (directory name)
              chart_name=$(basename "$chart_dir")
              
              # Path to the Chart.yaml file
              chart_yaml="$chart_dir/Chart.yaml"
              
              # Check if Chart.yaml exists
              if [ -f "$chart_yaml" ]; then
                # Extract the version from Chart.yaml
                version=$(grep '^version:' "$chart_yaml" | awk '{print $2}')
                
                # Construct the tag name
                tag_name="helm-${chart_name}-${version}"
                
                # Check if the tag already exists
                if git rev-parse "$tag_name" >/dev/null 2>&1; then
                  echo "Tag $tag_name already exists for chart $chart_name."
                else
                  echo "Creating tag $tag_name for chart $chart_name version $version."
                  
                  # Create the annotated tag
                  git tag -a "$tag_name" -m "Release $chart_name version $version"
                  
                  # Push the tag to the remote repository
                  git push origin "$tag_name"
                fi
              else
                echo "Chart.yaml not found in $chart_dir"
              fi
            fi
          done        

      - name: Package Charts
        run: |
          cr package charts --package-path .cr-release-packages
  
      - name: Upload Charts
        run: |
          cr upload --owner ${{ github.repository_owner }} --git-repo ${{ github.event.repository.name }} --package-path .cr-release-packages --skip-existing
        env:
          CR_TOKEN: ${{ secrets.TEMPORARY_PLAYER_PAT }}
  
      - name: Update Helm Repo Index
        run: |
          cr index --owner ${{ github.repository_owner }} --git-repo ${{ github.event.repository.name }} --package-path .cr-release-packages --index-path ./index.yaml
  
      - name: Commit and Push to gh-pages
        run: |
          git fetch origin gh-pages
          git checkout gh-pages || git checkout -b gh-pages
          cp -R .cr-release-packages/* .
          cp index.yaml .
          git add .
          git commit -m "Update Helm repository index and charts"
          git push origin gh-pages
