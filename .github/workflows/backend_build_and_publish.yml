name: Build and Publish Backend Image

on:
  push:
    branches:
      - master
  pull_request_target:
    branches:
      - master
    types:
      - opened

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  APP: backend

jobs:
  build:
    runs-on: ubuntu-24.04
    defaults:
      run:
        working-directory: ${{ env.APP }}

    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Read Java version from build.gradle
        run: |
          # Read the build.gradle file
          java_version=$(grep -oP "sourceCompatibility\s*=\s*'(\d+)'" build.gradle | cut -d"'" -f2)
          echo "APP_JAVA_VERSION=$java_version" >> $GITHUB_ENV
      
      - name: Read app version from build.gradle
        run: |
          # Read the build.gradle file
          app_version=$(grep -oP "version\s*=\s*'(\d+\.\d+\.\d+)'" build.gradle | cut -d"'" -f2)
          echo "APP_VERSION=$app_version" >> $GITHUB_ENV

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: ${{ env.APP_JAVA_VERSION }}
          cache: gradle

      - name: Test Gradle package
        run: ./gradlew test

      - name: Build Gradle package
        run: ./gradlew build

      - name: Log in to the Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ github.token }}

      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
        with:
          context: ./${{ env.APP }}
          push: true
          tags: ${{ env.registry }}/${{ env.IMAGE_NAME}}:${{ env.APP }}${{ env.APP_VERSION }}


      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v1
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true